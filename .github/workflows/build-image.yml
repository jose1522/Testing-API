name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:

  push:
    branches: [ main, master ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main, master ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - id: repo
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.repository }}
      
      # https://github.com/anothrNick/github-tag-action
      - name: Bump version and push tag
        id: tag
        uses: anothrNick/github-tag-action@1.26.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true

      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./src
          tags: ${{ env.REGISTRY }}/${{ steps.repo.outputs.lowercase }}:${{ steps.tag.outputs.new_tag }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Debug outputs
        run: echo ${{ steps.meta.outputs }}

      - name: Update manifest
        uses: fjogeleit/yaml-update-action@master
        with:
          branch: main
          message: 'Update to manifest'
          token: ${{ secrets.GITHUB_TOKEN }}
          valueFile: 'argo-deployment.yaml'
          propertyPath: 'metadata.annotations.image_version'
          value: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.new_tag }}
          workDir: ./argocd
